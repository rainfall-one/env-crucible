name: publish env-crucible
on: 
  schedule:    
    - cron: '0 23 * * 6'  
      push:   
       branches: [ "main" ]  
       tags:['v*.*.*']
       pull_request:
        branches:["main"]
        
jobs:
  publish-env-crucible-docker-image:
    runs-on: crucible-one, crucible-two
    permissions:
      packages: write
      contents: read
      id-token: write

    steps:
    -
      name: Checkout
      uses: actions/checkout@v3

    -
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          yaml:
            - '*.yml'
          docker:
            - '*Docker*'

    -
      name: Set up Docker Buildx
      if: steps.filter.outputs.yaml == 'true' || steps.filter.outputs.docker == 'true'
      uses: docker/setup-buildx-action@v2

    -
      name: Cache Docker layers
      if: steps.filter.outputs.yaml == 'true' || steps.filter.outputs.docker == 'true'
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - 
      name: Login to GitHub Container Registry
      if: steps.filter.outputs.yaml == 'true' || steps.filter.outputs.docker == 'true'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - 
      name: Build and push env-crucible container...
      if: steps.filter.outputs.yaml == 'true' || steps.filter.outputs.docker == 'true'
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/arm64, linux/amd64
        push: true
        tags: ghcr.io/rainfall/env-crucible:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    -
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        if: steps.filter.outputs.yaml == 'true' || steps.filter.outputs.docker == 'true'
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache  
      